import{U as s}from"../../resources/global/global.api.CrVXT8XL.js";const r={name:"S3Upload",extends:{},mixins:[],components:{},props:{modelValue:{type:[String,Array]},limit:{type:Number,default:1},accept:{type:String,default:void 0},upload:{type:s,default:new s},buildFileUrl:{type:Function,default:t=>t}},emits:["update:modelValue"],data(){return{fileList:[],hideUpload:!1}},computed:{action:{get(){return this.$servers.getRequestURL(this.$servers.openServer,"tb/minio/uploadImgCompress")}},hide:{get(){return this.hideUpload||this.fileList.length===this.limit}}},watch:{modelValue:{handler:"initFileList",immediate:!0}},created(){},methods:{initFileList(){let t=[];this.modelValue&&(this.modelValue instanceof Array?t=this.modelValue:this.limit>1?t=JSON.parse(this.modelValue):t=[this.modelValue]),this.fileList=t.map(e=>({url:e,name:e.slice(e.lastIndexOf("/")+1)})).map(e=>({...e,uid:e.name}))},getPreviewImages(t){const e=this.fileList.map(d=>this.buildFileUrl(d.url)),i=e.indexOf(this.buildFileUrl(t));if(i===0)return e;let l=e.splice(i),a=e.splice(0,i);return l.concat(a)},updateModelValue(){let t=this.fileList.map(e=>e.response?e.response.data.visitPath:e.url);this.modelValue instanceof Array?this.$emit("update:modelValue",t||[]):this.limit===1?this.$emit("update:modelValue",t[0]||""):this.$emit("update:modelValue",JSON.stringify(t)||"")},beforeUpload(){this.hideUpload=!0},onSuccess(t,e,i){this.fileList=i,this.updateModelValue(),this.hideUpload=!1},onRemove(t,e){this.fileList=e,this.updateModelValue()},onExceed(t,e){this.$message({message:`超过最大[${this.limit}]上传限制`})},httpRequest(t){new Promise((e,i)=>this.upload.upload(t,e,i)).catch(e=>{this.hideUpload=!1,e instanceof Error?console.error(e):this.$message({message:e,type:"error"})})}}};export{r as default};
