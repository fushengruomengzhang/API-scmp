import{s as f}from"../../resources/util/snowflake.util.C4QYlgiq.js";import{_ as l}from"../address/S3Address.BvGSUWFm.js";import{r as i,c as p,o as c,k as h,w as u,b as m,m as $}from"../../vue.CpRb0aFL.js";const k={name:"S3Tree",components:{},setup(){return{}},emits:[],props:{},data(){return{reloadTree:0}},computed:{},watch:{},created(){},mounted(){},methods:{reloadNode(...t){let e=0;if(t.filter(Boolean).forEach(r=>{const s=this.$refs.tree.getNode(r);s?(s.loaded=!1,s.expanded&&s.expand(),e!==2&&(e=1)):e=2}),e!==1)return this.reloadTree=f()},filter(t){this.$refs.tree.filter(t)},getNode(t){return this.$refs.tree.getNode(t)},getParentNode(t){let e=this.$refs.tree.getNode(t);if(!e||!e.parent)return[];const r=[];for(e=this.$refs.tree.getNode(e.parent.data);e&&(r.push(e.data),!!e.parent);)e=this.$refs.tree.getNode(e.parent.data);return r},setChecked(t,e=!0,r=!1){this.$refs.tree.setChecked(t,e,r)},setCheckedKeys(t,e){this.$refs.tree.setCheckedKeys(t,e)}}};function N(t,e,r,s,o,_){const a=i("el-tree");return c(),p(a,$({ref:"tree"},t.$attrs,{key:o.reloadTree}),h({_:2},[t.$slots.default?{name:"default",fn:u(({node:d,data:n})=>[m(t.$slots,"default",{node:d,data:n})]),key:"0"}:void 0]),1040)}const T=l(k,[["render",N]]);export{T as default};
