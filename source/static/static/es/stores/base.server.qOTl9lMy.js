import{d as g}from"../pinia.DPawhP_y.js";import{p as l}from"../resources/util/protobuf.util.Yhvc6nkC.js";const h=new TextEncoder,M=g("base.server.error",{state:()=>({errorMsg:void 0}),actions:{getErrorMsg(){const e=this.errorMsg;return this.errorMsg=void 0,e},setErrorMsg(e){this.errorMsg=e}}});g("base.server.socket",{state:()=>({urlFn:void 0,protocols:void 0,webSocket:void 0,onMessage:{},closeFlag:!0}),actions:{close(){return this.closeFlag=!0,this.webSocket&&this.webSocket.close(),this},createSocket(e,r,t=o=>console.log(o)){this.closeFlag=!1,e&&r&&(this.urlFn=e,this.protocols=r);const o={onopen:({currentTarget:{url:s}})=>console.log("open socket",s),onerror:s=>console.error(s),onclose:s=>{},onmessage:s=>{const a=new FileReader;a.onload=d=>{let n=l(d.target.result),c=this.onMessage[n.msgType];c?new Promise(i=>c(n.msgDetail,i)).then(i=>i?void 0:t(n)):t(n)},a.readAsArrayBuffer(s.data)}};this.webSocket=Object.assign(new WebSocket(this.urlFn(),this.protocols),o)},registerMessage(e,r){this.onMessage[e]=r},unRegisterMessage(e){delete this.onMessage[e]},sendMsg(e,r,t,o,s){this.webSocket.send(h.encode(JSON.stringify({fromFlag:e,uniqueFlag:r,toFlags:t,msgType:o,msgDetail:s})))}}});export{M as e};
